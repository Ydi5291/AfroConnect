import{$ as s,$a as sa,$b as sb,Aa as T,Ab as Ta,Ba as U,Bb as Ua,Ca as V,Cb as Va,Da as W,Db as Wa,Ea as X,Eb as Xa,Fa as Y,Fb as Ya,Ga as Z,Gb as Za,Ha as _,Hb as _a,Ia as $,Ib as $a,J as a,Ja as aa,Jb as ab,K as b,Ka as ba,Kb as bb,L as c,La as ca,Lb as cb,M as d,Ma as da,Mb as db,N as e,Na as ea,Nb as eb,O as f,Oa as fa,Ob as fb,P as g,Pa as ga,Pb as gb,Q as h,Qa as ha,Qb as hb,R as i,Ra as ia,Rb as ib,S as j,Sa as ja,Sb as jb,T as k,Ta as ka,Tb as kb,U as l,Ua as la,Ub as lb,V as m,Va as ma,Vb as mb,W as n,Wa as na,Wb as nb,X as o,Xa as oa,Xb as ob,Y as p,Ya as pa,Yb as pb,Z as q,Za as qa,Zb as qb,_ as r,_a as ra,_b as rb,aa as t,ab as ta,ac as tb,ba as u,bb as ua,bc as ub,ca as v,cb as va,cc as vb,da as w,db as wa,dc as wb,ea as x,eb as xa,ec as xb,fa as y,fb as ya,fc as yb,ga as z,gb as za,gc as zb,ha as A,hb as Aa,ia as B,ib as Ba,ja as C,jb as Ca,ka as D,kb as Da,la as E,lb as Ea,ma as F,mb as Fa,na as G,nb as Ga,oa as H,ob as Ha,pa as I,pb as Ia,qa as J,qb as Ja,ra as K,rb as Ka,sa as L,sb as La,ta as M,tb as Ma,ua as N,ub as Na,va as O,vb as Oa,wa as P,wb as Pa,xa as Q,xb as Qa,ya as R,yb as Ra,za as S,zb as Sa}from"./chunk-LEK4KLMM.js";import"./chunk-JDWB5EOZ.js";import"./chunk-4VCYTZ72.js";export{I as AbstractUserDataWriter,u as AggregateField,v as AggregateQuerySnapshot,w as Bytes,s as CACHE_SIZE_UNLIMITED,q as CollectionReference,p as DocumentReference,M as DocumentSnapshot,x as FieldPath,y as FieldValue,ga as Firestore,c as FirestoreError,ha as FirestoreInstances,ja as FirestoreModule,z as GeoPoint,r as LoadBundleTask,ca as PersistentCacheIndexManager,o as Query,D as QueryCompositeFilterConstraint,B as QueryConstraint,O as QueryDocumentSnapshot,H as QueryEndAtConstraint,C as QueryFieldFilterConstraint,F as QueryLimitConstraint,E as QueryOrderByConstraint,P as QuerySnapshot,G as QueryStartAtConstraint,L as SnapshotMetadata,k as Timestamp,_ as Transaction,A as VectorValue,Z as WriteBatch,f as _AutoId,m as _ByteString,n as _DatabaseId,h as _DocumentKey,e as _EmptyAppCheckTokenProvider,d as _EmptyAuthCredentialsProvider,g as _FieldPath,fa as _TestingHooks,j as _cast,b as _debugAssert,ea as _internalAggregationQueryToProtoRunAggregationQueryRequest,da as _internalQueryToProtoQueryTarget,l as _isBase64Available,a as _logWarn,i as _validateIsNotUsedTogether,wa as addDoc,xa as aggregateFieldEqual,ya as aggregateQuerySnapshotEqual,za as and,ba as arrayRemove,aa as arrayUnion,la as auditTrail,J as average,Aa as clearIndexedDbPersistence,Ba as collection,na as collectionChanges,oa as collectionCount,pa as collectionCountSnap,qa as collectionData,Ca as collectionGroup,ma as collectionSnapshots,Da as connectFirestoreEmulator,K as count,Ea as deleteAllPersistentCacheIndexes,Fa as deleteDoc,Ga as deleteField,Ha as disableNetwork,Ia as disablePersistentCacheIndexAutoCreation,Ja as doc,sa as docData,ra as docSnapshots,Ka as documentId,N as documentSnapshotFromJSON,La as enableIndexedDbPersistence,Ma as enableMultiTabIndexedDbPersistence,Na as enableNetwork,Oa as enablePersistentCacheIndexAutoCreation,Pa as endAt,Qa as endBefore,t as ensureFirestoreConfigured,S as executeWrite,ia as firestoreInstance$,ta as fromRef,Ra as getAggregateFromServer,Sa as getCountFromServer,Ta as getDoc,Ua as getDocFromCache,Va as getDocFromServer,Wa as getDocs,Xa as getDocsFromCache,Ya as getDocsFromServer,Za as getFirestore,_a as getPersistentCacheIndexManager,$a as increment,ab as initializeFirestore,bb as limit,cb as limitToLast,db as loadBundle,T as memoryEagerGarbageCollector,V as memoryLocalCache,U as memoryLruGarbageCollector,eb as namedQuery,fb as onSnapshot,R as onSnapshotResume,gb as onSnapshotsInSync,hb as or,ib as orderBy,W as persistentLocalCache,Y as persistentMultipleTabManager,X as persistentSingleTabManager,ka as provideFirestore,jb as query,kb as queryEqual,Q as querySnapshotFromJSON,lb as refEqual,mb as runTransaction,$ as serverTimestamp,nb as setDoc,ob as setIndexConfiguration,pb as setLogLevel,ua as snapToData,qb as snapshotEqual,va as sortedChanges,rb as startAfter,sb as startAt,tb as sum,ub as terminate,vb as updateDoc,wb as vector,xb as waitForPendingWrites,yb as where,zb as writeBatch};
